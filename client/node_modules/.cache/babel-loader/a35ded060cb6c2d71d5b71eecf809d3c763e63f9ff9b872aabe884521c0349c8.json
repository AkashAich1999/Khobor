{"ast":null,"code":"var _jsxFileName = \"D:\\\\zzzzz Latest Projects\\\\Khobor\\\\client\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  async function register(ev) {\n    ev.preventDefault();\n    const response = await fetch('http://localhost:7000/register', {\n      method: \"POST\",\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    // console.log(response);\n    if (response.status === 200) {\n      alert(\"Registration Succeed !\");\n    } else {\n      alert(\"Registration Failed !\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"register\",\n    onSubmit: register,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      value: username,\n      onChange: ev => setUsername(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      value: password,\n      onChange: ev => setPassword(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(RegisterPage, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","RegisterPage","_s","username","setUsername","password","setPassword","register","ev","preventDefault","response","fetch","method","body","JSON","stringify","headers","status","alert","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["D:/zzzzz Latest Projects/Khobor/client/src/pages/RegisterPage.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function RegisterPage() {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    async function register(ev){\r\n        ev.preventDefault();\r\n        const response = await fetch('http://localhost:7000/register', {\r\n            method: \"POST\",\r\n            body: JSON.stringify({username, password}),\r\n            headers: {'Content-Type': 'application/json'},\r\n        });\r\n        // console.log(response);\r\n        if(response.status === 200){\r\n            alert(\"Registration Succeed !\");\r\n        } else {\r\n            alert(\"Registration Failed !\");\r\n        }\r\n    }\r\n    return(\r\n        <form className=\"register\" onSubmit={register}>\r\n            <h1>Register</h1>\r\n            <input type=\"text\" \r\n                    placeholder=\"username\" \r\n                    value={username} \r\n                    onChange={ev => setUsername(ev.target.value)}/>\r\n            <input type=\"password\" \r\n                    placeholder=\"password\" \r\n                    value={password} \r\n                    onChange={ev => setPassword(ev.target.value)}/>\r\n            <button>Register</button>\r\n        </form>\r\n    );\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,eAAeS,QAAQA,CAACC,EAAE,EAAC;IACvBA,EAAE,CAACC,cAAc,CAAC,CAAC;IACnB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACZ,QAAQ;QAAEE;MAAQ,CAAC,CAAC;MAC1CW,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB;IAChD,CAAC,CAAC;IACF;IACA,IAAGN,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAC;MACvBC,KAAK,CAAC,wBAAwB,CAAC;IACnC,CAAC,MAAM;MACHA,KAAK,CAAC,uBAAuB,CAAC;IAClC;EACJ;EACA,oBACIlB,OAAA;IAAMmB,SAAS,EAAC,UAAU;IAACC,QAAQ,EAAEb,QAAS;IAAAc,QAAA,gBAC1CrB,OAAA;MAAAqB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MACVC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEzB,QAAS;MAChB0B,QAAQ,EAAErB,EAAE,IAAIJ,WAAW,CAACI,EAAE,CAACsB,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvDzB,OAAA;MAAO0B,IAAI,EAAC,UAAU;MACdC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEvB,QAAS;MAChBwB,QAAQ,EAAErB,EAAE,IAAIF,WAAW,CAACE,EAAE,CAACsB,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvDzB,OAAA;MAAAqB,QAAA,EAAQ;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEf;AAACvB,EAAA,CA/BuBD,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}